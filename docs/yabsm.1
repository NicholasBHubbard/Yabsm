.TH "YABSM" "1" "2021" "YABSM" "YABSM User Guide"
.SH "NAME"
yabsm \- Yet Another Btrfs Snapshot Manager
.SH "SYNOPSIS"
.B yabsm [\fB\-\-help\fR] [\fB\-\-version\fR]
<\fBcommand\fR> [<\fBargs\fR>]
.SH "COMMANDS"
.TP
.BR "find, f \fISUBJECT\fR \fIQUERY\fR"
Find a snapshot of SUBJECT that matches QUERY. SUBJECT can be any \fIsubvol\fR
or \fIbackup\fR defined in \fI/etc/yabsm.conf\fR. For detailed information on
how to use this command see the \fBFINDING SNAPSHOTS\fR section below.
.TP
.BR "update\-crontab, update"
Read \fI/etc/yabsm.conf\fR and write the proper cronjobs for
snapshots and backups to \fI/etc/crontab\fR.
.TP
.BR "print\-crons, crons"
Print the cronjob strings that would be written to \fI/etc/crontab\fR
if the update\-crontab command was used. This is useful if you want to
write yabsm cronjobs to a file other than \fI/etc/crontab\fR.
.TP
.BR "check\-config, c \fI?CONFIG\fR"
Check that ?CONFIG is a valid yabsm configuration file. If errors are found they
are printed to STDERR and the program will exit with a non-zero status. If the
config is valid print 'all good'. If the ?CONFIG argument is omitted
\fI/etc/yabsm.conf\fR is checked.
.TP
.BR "test\-remote\-config, tr \fIBACKUP\fR"
Test that the remote backup BACKUP is configured correctly. Correct
configuration means that yabsm can connect to BACKUP's remote host and use the
btrfs command with sudo without entering any passwords manually.
.TP
.BR "print\-subvols, subvols"
Print the names of all \fBsubvols\fR defined in \fI/etc/yabsm.conf\fR.
.TP
.BR "print\-backups, backups"
Print the names of all \fBbackups\fR defined in \fI/etc/yabsm.conf\fR.
.TP
.BR "take\-snap, snap \fISUBVOL TIMEFRAME\fR"
Take a new snapshot of SUBVOL and insert it into the directory for
TIMEFRAME. Using this command manually is not recommended, it is only meant to
be used in cronjobs. This is a root-only command.
.TP
.BR "incremental\-backup, backup \fIBACKUP\fR"
Perform an incremental backup of BACKUP. BACKUP must be a defined backup in the
users \fI/etc/yabsm.conf\fR. If the bootstrap phase of the incremental backup
has not yet happened then the bootstrap phase is performed and the program
exits. Using this command manually is not recommended, it is only meant to
be used in cronjobs. Please consult the btrfs documentation on incremental 
backups for more information. This is a root-only command.
.TP
.BR "bootstrap\-backup, bootstrap \fIBACKUP\fR"
Perform the bootstrap phase of a btrfs incremental backup for BACKUP. BACKUP
must be a defined backup in \fI/etc/yabsm.conf\fR. It may be helpful to run this
command periodically to make incremental backups faster. Please consult the
btrfs documentation on incremental backups for more information. This is a
root-only command.
.SS "SUBVOLS"
Subvols are defined in \fI/etc/yabsm.conf\fR. Yabsm subvols only
correlate to btrfs subvolumes by their \fBmountpoint\fR setting.

Every subvol gets its own directory in the \fByabsm_dir\fR. Within a subvols
directory are sub-directories for each timeframe that the subvol is taking snapshots
in. Within the timeframe directories are where the snapshots reside.
.SS "BACKUPS"
Backups are defined in \fI/etc/yabsm.conf\fR. Backups must backup a defined \fBsubvol\fR.
Backups may be either remote or local. If a backup is remote you must define a \fBhost\fR
setting for that backup. The \fBhost\fR may be a host defined in your \fI~/.ssh/config\fR
or a host name with the \fBuser@ip\fR form.

The location of a backup is defined with the \fBbackup_dir\fR setting. This location is taken
literally so you probably want \fB/yabsm/\fR somewhere in the path. If the backup is remote then
the \fBbackup_dir\fR on the remote machine must already exist.
.SS "TIMEFRAMES"

.SH "FINDING SNAPSHOTS"
The \fBfind\fR command is used to find one or more snapshots of a subject by
applying a query to all of the subjects snapshots. A subject can be any subvol
or backup defined in \fI/etc/yabsm.conf\fR. If multiple snapshots are found they
are printed in order from newest to oldest.
.SS "EXAMPLES"

Assume that you have a subvol named \fIhome\fR and a backup named
\fIhomeBackup\fR.

\(bu yabsm find home all

\(bu yabsm find homeBackup newest

\(bu yabsm find home oldest

\(bu yabsm find homeBackup back-10-hours

\(bu yabsm find homeBackup 12-25

\(bu yabsm find b-10-h home

\(bu yabsm find homeBackup back-10-days

\(bu yabsm find home 'before b-10-mins'

\(bu yabsm find home 'after b-10-mins'

\(bu yabsm find homeBackup 'after 2021-12-25-23-59'

\(bu yabsm find home 'between b-10-d 12-25'

\(bu yabsm find home 'between 12-25 b-10-d'
.SS "QUERIES"
.nf
There are three different kinds of queries: a \fBconstant\fR query, an
\fBimmediate\fR query and a \fBkeyword\fR query.

\fBConstant Queries\fR

    \(bu all    - return all the snapshots of subject.
    
    \(bu newest - return the newest snapshot of subject.
    
    \(bu oldest - return the oldest snapshot of subject.

\fBImmediate Queries\fR
    An immediate query gives the one snapshot of the subject that is closest to
    the time denoted by the immediate.

    An immediate can be either a \fIrelative\fR time or a \fIliteral\fR time.

    A \fIrelative\fR time is a time relative to the current system. Relative
    times have the form \fBback-amount-unit\fR. \fIback\fR can always be
    abbreviated to \fIb\fR. \fIamount\fR must be an integer greater than or
    equal to zero. \fIunit\fR is a time unit that can be either \fIminutes\fR,
    \fIhours\fR, or \fIdays\fR. Time units can be abbreviated intuitively to
    \fImins\fR, \fIm\fR, \fIhrs\fR, \fIh\fR, \fId\fR.

    A \fIliteral\fR time comes in one of 5 forms:

        \(bu yr-mon-day-hr-min

        \(bu yr-mon-day

        \(bu mon-day

        \(bu mon-day-hr

        \(bu mon-day-hr-min

    The first form \fIyr-mon-day-hr-min\fR is the base form. All other forms are
    a shorthand of this form. The shorthand rules are simple. If the \fIyr\fR
    field is omitted then we assume the current year. If either the \fIhr\fR or
    \fImin\fR fields are omitted then they are inferred to be zero. So if the
    year is 2020 the \fIimmediate\fR time \fB12-25\fR is the same as
    \fB2020-12-25-0-0\fR.

\fBKeyword Queries\fR

    A \fIkeyword\fR query is a query that takes one or more \fIimmediate\fRs as
    arguments. There are three different kinds of \fIkeyword\fR queries. The
    terms delimited by \fB|\fR are equivalent.

        \(bu after   | aft | newer

        \(bu before  | bef | older

        \(bu between | bet

    An \fBafter\fR query takes one immediate argument and matches all snapshots
    taken after the time denoted by the immediate.
    
    A \fBbefore\fR query takes one immediate argument and matches all snapshots
    taken before the time denoted by the immediate.

    A \fBbetween\fR query takes two immediate arguments and matches all
    snapshots taken between (inclusive) the times denoted by the immediates. It
    does not matter what order you pass the two immediates.
.fi
.SH "REMOTE BACKUPS"
Yabsm does not directly deal with passwords, therefore you must set up your
machines to be able to connect via a passwordless public key, and create a
sudoers rule to allow the remote user to use the btrfs command without entering
a password. 

The remote \fBbackup_dir\fR must already exist.

To test that a remote backup has been configured correctly use the
\fItest-remote-config\fR command. If the remote backup is misconfigured
the output of this command should make it clear what the issue is.

Remote backups are performed via \fBssh(1)\fR. To be able to connect to a remote host
without entering a password you must set up passwordless public key authentication.

The btrfs command must be able to run with \fBsudo\fR on the remote machine
without entering a password. It is recommended to set up a \fBsudoers(5)\fR rule to
allow the user being signed in on the remote machine to use btrfs without
password authentication. For example, adding the following line to the remote
\fI/etc/sudoers\fR file will allow \fIuser\fR to use the btrfs program without
entering a password.
.nf

\fBuser	ALL=(ALL:ALL) NOPASSWD : /path/to/btrfs\fR
.fi
.SH "REPORTING BUGS"
Please report bugs at 
.UR https://github.com/NicholasBHubbard/yabsm/issues
.UE .
.SH "SEE ALSO"
yabsm.conf(5), ssh(1), sudoers(5), crontab(5)
.SH "AUTHOR"
Written by Nicholas Hubbard
.SH "LICENSE"
MIT
