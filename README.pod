=pod

=head1 What is Yabsm?

Yabsm is a btrfs snapshot and backup management system that provides the 
following features.

=over 4

=item *

Takes readonly snapshots and performs remote and local incremental backups.

=item *

Seperates snapshots and backups into 5minute, hourly, daily, weekly, and monthly
timeframe categories

=item *

Cycles out old snapshots and backups on a per-timeframe basis

=item *

Provides a simple query language for locating snapshots and backups.

=back

=head1 Snapshots vs Backups

The difference between a snapshot and a backup can be a little confusing. 

When we talk about a snapshot we mean a read-only subvolume created with the
C<btrfs subvolume snapshot -r> command.

A backup is a snapshot that has been transferred to another btrfs filesystem via
a combination of C<btrfs send> and C<btrfs receive>.

L<btrfs snapshots|https://btrfs.readthedocs.io/en/latest/btrfs-subvolume.html#subvolume-and-snapshot>

L<btrfs send/receive|https://btrfs.readthedocs.io/en/latest/Send-receive.html>

=head1 Dependencies

=over 4

=item *

L<Perl|https://perldoc.perl.org/>

=item *

L<OpenSSH|https://www.openssh.com/>

=item *

L<Sudo|https://www.sudo.ws/>

=item *

L<btrfs-progs|https://github.com/kdave/btrfs-progs>

=back

=head1 Installation

TODO

=head1 Starting the Yabsm Daemon

  TODO

=head1 Configuration

Yabsm in configured via the C</etc/yabsm.conf> file.

On installation this file will not exist, but there will be a file
C</etc/yabsmd.conf.example> that you can use to help you build your
configuration.

You can run the command C<yabsm config check> that will check your config and
output useful error messages to STDERR if there are any problems.

Please browse through the L<example configurations|TODO> for inspiration.

=head2 Configuration Grammar 

First things first: You must specify a C<yabsm_dir> that yabsm will use for
storing snapshots and using as a cache for holding objects needed for performing
backups. Most commonly this directory is C</.snapshots/yabsm>. Yabsm will take
this directory literally so you almost certainly want the path to end in
C</yabsm>. If this directory doesn't exist the yabsm daemon will create it
automatically when it starts.

There are 4 different configuration objects: I<subvols>, I<snaps>, I<ssh_backups>,
and I<local_backups>.

A subvol is the simplest configuration object, and is used to give a name to a L<btrfs subvolume|https://btrfs.wiki.kernel.org/index.php/SysadminGuide#Subvolumes> on your system. A subvol definition accepts one field called =mountpoint= which takes a value that is a path to a subvolume.

    subvol home_subvol {
        mountpoint=/home
    }

Before we can understand I<snaps>, I<ssh_backups>, and I<local_backups>, we need
to understand timeframes, which work the same for each of these configuration 
objects. To specify the timeframes you want you set the value of the C<timeframes>
setting to a comma seperated list of timeframe values. For example this is how
you specify that you want every timeframe:

    timeframes=5minute,hourly,daily,weekly,monthly

Each timeframe you specify adds new required settings for the configuration 
object. Here is a table that shows the timeframe settings:

    5minute -> 5minute_keep
    hourly  -> hourly_keep
    daily   -> daily_keep,   daily_times
    weekly  -> weekly_keep,  weekly_time,  weekly_day
    monthly -> monthly_keep, monthly_time, monthly_day
 
Any C<*_keep> setting defines how many snapshots/backups you want to keep at one
time for the configuration object. For example A common configuration is to keep
48 hourly snapshots so you can go back 2 days in one-hour increments.

The C<daily_times> setting for daily snapshots takes a comma seperated list of
I<hh:mm> times. Yabsm will perform the snapshot/backup everyday at all the given
times.

The weekly timeframe requires a C<weekly_day> setting that takes a day of week
string such as I<monday>, or I<saturday> and a <weekly_time> setting that takes a
I<hh:mm> time. The weekly snapshot/backup will be performed on the given day of 
the week at the given time.

The monthly timeframe requires a C<monthly_day> setting that takes an integer
between 1-31 and a C<monthly_time> setting that takes a I<hh:mm> time. The 
monthly snapshot/backup will be performed on the given day of the month at the 
given time.

=head1 CONTRIBUTING

TODO

=head1 License

MIT

=cut
