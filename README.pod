=pod

=head1 What is Yabsm?

Yabsm is a btrfs snapshot and backup management system that provides the 
following features.

=over 4

=item *

Takes readonly snapshots and performs remote and local incremental backups.

=item *

Seperates snapshots and backups into 5minute, hourly, daily, weekly, and monthly
timeframe categories

=item *

Cycles out old snapshots and backups on a per-timeframe basis

=item *

Provides a simple query language for locating snapshots and backups.

=back

=head1 Snapshots vs Backups

Before we go on lets clear up the difference between a snapshot and a backup
because it can be a little confusing.

When we talk about a
L<snapshot|https://btrfs.readthedocs.io/en/latest/btrfs-subvolume.html#subvolume-and-snapshot>
we mean a read-only subvolume created with the C<btrfs subvolume snapshot -r>
command.

A L<backup|https://btrfs.readthedocs.io/en/latest/Send-receive.html> is a
snapshot that has been transferred to another btrfs filesystem via a combination
of C<btrfs send> and C<btrfs receive>.

=head1 Dependencies

=over 4

=item *

L<Perl|https://perldoc.perl.org/>

=item *

L<OpenSSH|https://www.openssh.com/>

=item *

L<Sudo|https://www.sudo.ws/>

=item *

L<btrfs-progs|https://github.com/kdave/btrfs-progs>

=back

=head1 Installation

TODO

=head1 The Yabsm Daemon

Yabsm runs as a cron-style daemon that periodically performs snapshots and 
backups.

Yabsm comes with a C<daemon> subcommand that allows you to start, stop, restart,
and status the yabsm daemon.

    yabsm daemon <start|stop|restart|status>

The yabsm daemon must be started as root so it can initialize its runtime 
environment, but after the initialization it switches itself to a locked user
named I<yabsm>.

=head1 Configuration

Yabsm in configured via the C</etc/yabsm.conf> file.

On installation this file will not exist, but there will be a file
C</etc/yabsmd.conf.example> that you can use to help you build your
configuration.

You can run the command C<yabsm config check> that will check your config and
output useful error messages if there are any problems.

Please browse through the L<example configurations|TODO> for inspiration.

=head2 Configuration Grammar 

First things first: You must specify a C<yabsm_dir> that yabsm will use for
storing snapshots and using as a cache for holding objects needed for performing
backups. Most commonly this directory is C</.snapshots/yabsm>. Yabsm will take
this directory literally so you almost certainly want the path to end in
C</yabsm>. If this directory doesn't exist the yabsm daemon will create it
automatically when it starts. From here on we will refer to this directory as
I<$YABSM_DIR>.

There are 4 different configuration objects: I<subvols>, I<snaps>, I<ssh_backups>,
and I<local_backups>.

=head3 Subvols

A subvol is the simplest configuration object, and is used to give a name to a L<btrfs subvolume|https://btrfs.wiki.kernel.org/index.php/SysadminGuide#Subvolumes> on your system. A subvol definition accepts one field called =mountpoint= which takes a value that is a path to a subvolume.

    subvol home_subvol {
        mountpoint=/home
    }

=head3 Timeframes

We need to understand timeframes gefore we can understand I<snaps>,
I<ssh_backups>, and I<local_backups>. There are 5 timeframes: 5minute, hourly,
daily, weekly, and monthly. 

I<snaps>, <ssh_backups>, and I<local_backups> are configured to use one or more
timeframes. For example an I<ssh_backup> may be configured to use the I<hourly> 
and I<weekly> categories, which means that we want to perform the backups every
hour an once a week.

The following table describes in plain english what each timeframe means.

    5minute -> Every 5minutes
    hourly  -> At the beginning of every hour
    daily   -> Everyday at one or more times of the day
    weekly  -> Once a week on a specific weekday at a specific time
    monthly -> Once a month on a specific day at a specific time

To specify the timeframes you want you set the value of the C<timeframes>
setting to a comma seperated list of timeframe values. For example this is how
you specify that you want every timeframe:

    timeframes=5minute,hourly,daily,weekly,monthly

Each timeframe you specify adds new required settings for the configuration 
object. Here is a table that shows the timeframe settings:

    5minute -> 5minute_keep
    hourly  -> hourly_keep
    daily   -> daily_keep,   daily_times
    weekly  -> weekly_keep,  weekly_time,  weekly_day
    monthly -> monthly_keep, monthly_time, monthly_day
 
Any C<*_keep> setting defines how many snapshots/backups you want to keep at one
time for the configuration object. For example A common configuration is to keep
48 hourly snapshots so you can go back 2 days in one-hour increments.

The C<daily_times> setting for daily snapshots takes a comma seperated list of
I<hh:mm> times. Yabsm will perform the snapshot/backup everyday at all the given
times.

The weekly timeframe requires a C<weekly_day> setting that takes a day of week
string such as I<monday>, I<thursday>, or I<saturday> and a I<weekly_time>
setting that takes a I<hh:mm> time. The weekly snapshot/backup will be performed
on the given day of the week at the given time.

The monthly timeframe requires a C<monthly_day> setting that takes an integer
between 1-31 and a C<monthly_time> setting that takes a I<hh:mm> time. The
monthly snapshot/backup will be performed on the given day of the month at the 
given time.

=head3 Snaps

A I<snap> represents a snapshot configuration for some I<subvol>. Here is an
example of a I<snap> that snapshots I<home_subvol> twice a day.

    snap home_subvol_snap {
        subvol=home_subvol
        timeframes=daily
        daily_keep=62 # two months
        daily_times=13:40,23:59
    }

=head3 SSH Backups 

A I<ssh_backup> represents a backup configuration that sends snapshots over a
network via SSH. See this example of a I<ssh_backup> that backs up I<home_subvol>
to C<larry@192.168.1.73:/backups/yabsm/laptop_home>:

    ssh_backup home_subvol_larry_server {
        subvol=home_subvol
        ssh_dest=larry@192.168.1.73
        dir=/backups/yabsm/laptop_home
        timeframes=daily
        daily_keep=31
        daily_times=23:59 
    }

The difficult part of configuring a I<ssh_backup> is not writing the 
configuration, but rather making sure the SSH server is properly configured. For
a server to be properly configured it must satisfy the following conditions:

=over 4

=item *

The hosts I<yabsm> user can sign into the SSH destination (I<ssh_dest>) using key
based authentication. To achieve this you must add the I<yabsm> users SSH key
(available via C<# yabsm ssh print-key>) to the SSH user's
C<$HOME/.ssh/authorized_keys> file.

=item *

SSH backup directory (I<dir>) is an existing directory residing on a btrfs
filesystem.

=item *

The SSH user has read and write permission on the backup directory.

=item *

The SSH user has root access to btrfs-progs via sudo. To do this you can add a
file containing the string C<larry ALL=(root) NOPASSWD /sbin/btrfs> to
a file in C</etc/sudoers.d>.

=back

Yabsm allows you to check that an I<ssh_backups> server is configured correctly
by running the command.

    # yabsm ssh check SSH_BACKUP

This command will fail with useful error messages if any of the above conditions 
are not true.

=head3 Local Backups

A I<local_backup> represents a backup configuration that sends snapshots to a
partition mounted on the host OS. This is useful for sending snapshots to, for
example, a external hard drive plugged into your computer.

Here is an example I<local_backup> that backs up C<home_subvol> every hour, an
d once a week.

    local_backup home_subvol_easystore {
        subvol=home_subvol
        dir=/mnt/easystore/backups/yabsm/home_subvol
        timeframes=hourly,weekly
        hourly_keep=48
        weekly_keep=56
        weekly_day=sunday
        weekly_time=23:59
    }

=head1 Finding Snapshots

Now that we know how to configure yabsm to take snapshots, we are going to want
to locate those snapshots. Yabsm comes with a subcommand C<find> that allows you
to locate snapshots and backups using a simple query language. Here is the usage
string for the C<find> subcommand.

    $ yabsm find <SNAP|SSH_BACKUP|LOCAL_BACKUP> QUERY

The first argument is any I<snap>, I<ssh_backup>, or I<local_backup>. Because
these configuration entities share the same namespace there is no risk of 
ambiguity.

The second argument is a snapshot location query. There are 7 types of queries:

=over 4

=item 1

newest -> Returns the most recent snapshot/backup.

=item 2

oldest -> Returns the oldest snapshot/backup.

=item 3

after TIME -> Returns all the snapshot/backups that are newer than TIME.

=item 4

before TIME -> Returns all the snapshot/backups that are older than TIME.

=item 5

between TIME1 TIME2 -> Returns all the snapshot/backups that were taken between
TIME1 and TIME2.

=closest

TIME -> Return the snapshot/backup that was taken closest to TIME.

=back

=head1 CONTRIBUTING

TODO

=head1 License

MIT

=cut
