#!/usr/bin/env perl

# Bootstrap an environment for hacking on YABSM. We are going to use Perl::Build
# to compile Perl version 5.16.3, set up App::plx to use the Perl we build, and
# then use plx to install all our dependencies into a local::lib with cpanm.
#
# Perl::Build    - https://metacpan.org/pod/Perl::Build
# App::plx       - https://metacpan.org/pod/App::plx
# App::cpanminus - https://metacpan.org/pod/App::cpanminus

use strict;
use warnings;
use v5.16.3;

use Cwd qw(abs_path);
use File::Basename qw(basename dirname);
use File::Path qw(make_path);

use autodie;

my $script = basename(__FILE__);
my $yabsm_root = dirname(abs_path(__FILE__ . '/..'));

my $usage = <<'END_USAGE';
Usage: devel-bootstrap [arguments]

Arguments:
  -h or --help      Print help (this message) and exit
  -b <dir>          Install local Perl to <dir>
END_USAGE

my $perl_dir = "$yabsm_root/perl-5.16.3";
my $help;

use Getopt::Long qw/:config bundling no_ignore_case no_auto_abbrev/;
GetOptions('b=s' => \$perl_dir, 'help|h' => \$help) or die "$usage";

print $usage and exit 0 if $help;

                 ####################################
                 #               MAIN               #
                 ####################################

unless (-d $perl_dir) { 
    my $perl_build_cmd = "curl -L https://raw.githubusercontent.com/tokuhirom/Perl-Build/master/perl-build | perl - 5.16.3 $perl_dir";
    0 == system($perl_build_cmd)
      or die "$script: error: could not build Perl v5.16.3";
}

# setup plx
my $plx = '';
$plx = "$yabsm_root/local/bin/plx" if -x "$yabsm_root/local/bin/plx";
$plx = `sh -c 'command -v plx'` if `sh -c 'command -v plx'`;
chomp $plx;
unless ($plx) {
    make_path("$yabsm_root/local/bin");
    $plx = "$yabsm_root/local/bin/plx";
    my $plx_bootstrap_cmd = "wget https://raw.githubusercontent.com/shadowcat-mst/plx/master/bin/plx-packed -O $plx";
    0 == system($plx_bootstrap_cmd)
      or die "$script: error: could not perform bootstrap installation of App::plx";
    chmod 0555, $plx;
}

my $plx_init_cmd = "$plx --init $perl_dir/bin/perl";
0 == system($plx_init_cmd)
  or die "$script: error: could not initialize yabsm plx environment";

# install yabsms deps to the local::lib with plx.
my $deps = '';
open my $dep_fh, '<', "$yabsm_root/DEPENDENCIES";
while (<$dep_fh>) {
    next if /^\s*$|^\s*#/;
    s/#.*|\s+//g;
    if ($deps) { $deps .= " $_" }
    else       { $deps  = $_    }
}
close $dep_fh;

my $cpanm_cmd = "PERL_CPANM_HOME=$yabsm_root $plx --cpanm -L local -vfi $deps";
0 == system($cpanm_cmd)
  or die "$script: error: could not install deps from $yabsm_root/DEPENDENCIES";

# done
say 'all good';
